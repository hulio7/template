x-def-logging: &default-logging
  logging:
    driver: loki
    options:
      loki-url: "http://localhost:3100/loki/api/v1/push"
      loki-batch-size: "100"
      loki-retries: "2"
      loki-max-backoff: "1000ms"
      loki-timeout: "1s"

services:
  app:
    build: .
    container_name: template-app
    <<: *default-logging
    ports:
      - 8080:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/template
    depends_on:
      postgres:
        condition: service_healthy
    networks: [app-net]

  postgres:
    image: postgres:15-alpine
    platform: linux/amd64
    container_name: postgres
    <<: *default-logging
    environment:
      POSTGRES_DB: template
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks: [app-net]

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_EXPLORE_ENABLED=true
    depends_on:
      - loki
    networks: [app-net]

  loki:
    hostname: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks: [app-net]

  prometheus:
    image: prom/prometheus
    platform: linux/amd64
    user: "0:0"
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks: [app-net]

networks:
  app-net:
    driver: bridge

volumes:
  postgres-data:
  grafana-storage: